{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Documents/workstation/2025/lemu-project/developer/src/app/api/apiData.ts"],"sourcesContent":["export interface Endpoint {\n  id: string;\n  name: string;\n  description: string;\n  method: 'GET' | 'POST' | 'PUT' | 'DELETE';\n  url: string;\n  headers: Record<string, string>;\n  queryParams?: Array<{\n    name: string;\n    type: string;\n    required: boolean;\n    description: string;\n  }>;\n  pathParams?: Array<{\n    name: string;\n    type: string;\n    description: string;\n  }>;\n  requestBody?: {\n    type: string;\n    properties: Array<{\n      name: string;\n      type: string;\n      required: boolean;\n      description: string;\n    }>;\n  };\n  responses: Array<{\n    status: number;\n    description: string;\n    body: string;\n  }>;\n  sampleCode: {\n    curl: string;\n    javascript: string;\n    python: string;\n  };\n}\n\nexport interface ApiCategory {\n  name: string;\n  description: string;\n  endpoints: Endpoint[];\n}\n\nexport const API_DATA: ApiCategory[] = [\n  {\n    name: 'Banks',\n    description: 'Access and verify bank information',\n    endpoints: [\n      {\n        id: 'get-bank-list',\n        name: 'Get Bank List',\n        description: 'Retrieve a list of all supported banks',\n        method: 'GET',\n        url: '/api/v1/developer/banks/list',\n        headers: {\n          'X-API-Key': 'YOUR_API_KEY',\n          'X-API-Secret': 'YOUR_API_SECRET'\n        },\n        responses: [\n          {\n            status: 200,\n            description: 'Successful response',\n            body: `{\n  \"status\": \"success\",\n  \"data\": {\n    \"banks\": [\n      {\n        \"id\": \"044\",\n        \"name\": \"Access Bank\",\n        \"code\": \"044\",\n        \"swift_code\": \"ABNGNGLA\",\n        \"logo\": \"https://api.lemupay.com/images/banks/access.png\"\n      },\n      {\n        \"id\": \"063\",\n        \"name\": \"Access Bank (Diamond)\",\n        \"code\": \"063\",\n        \"swift_code\": \"DIAMNGLA\",\n        \"logo\": \"https://api.lemupay.com/images/banks/diamond.png\"\n      },\n      {\n        \"id\": \"050\",\n        \"name\": \"Ecobank Nigeria\",\n        \"code\": \"050\",\n        \"swift_code\": \"ECOCNGLA\",\n        \"logo\": \"https://api.lemupay.com/images/banks/ecobank.png\"\n      }\n    ]\n  }\n}`\n          },\n          {\n            status: 401,\n            description: 'Unauthorized',\n            body: `{\n  \"status\": \"error\",\n  \"message\": \"Invalid API credentials\"\n}`\n          }\n        ],\n        sampleCode: {\n          curl: `curl --request GET \\\\\n  --url http://localhost:5000/api/v1/developer/banks/list \\\\\n  --header 'X-API-Key: YOUR_API_KEY' \\\\\n  --header 'X-API-Secret: YOUR_API_SECRET'`,\n          javascript: `const options = {\n  method: 'GET',\n  headers: {\n    'X-API-Key': 'YOUR_API_KEY',\n    'X-API-Secret': 'YOUR_API_SECRET'\n  }\n};\n\nfetch('http://localhost:5000/api/v1/developer/banks/list', options)\n  .then(response => response.json())\n  .then(response => console.log(response))\n  .catch(err => console.error(err));`,\n          python: `import requests\n\nurl = \"http://localhost:5000/api/v1/developer/banks/list\"\n\nheaders = {\n    \"X-API-Key\": \"YOUR_API_KEY\",\n    \"X-API-Secret\": \"YOUR_API_SECRET\"\n}\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())`\n        }\n      },\n      {\n        id: 'verify-bank-account',\n        name: 'Verify Bank Account',\n        description: 'Verify a bank account number',\n        method: 'POST',\n        url: '/api/v1/developer/banks/verify',\n        headers: {\n          'X-API-Key': 'YOUR_API_KEY',\n          'X-API-Secret': 'YOUR_API_SECRET',\n          'Content-Type': 'application/json'\n        },\n        requestBody: {\n          type: 'object',\n          properties: [\n            {\n              name: 'account_number',\n              type: 'string',\n              required: true,\n              description: 'The bank account number to verify'\n            },\n            {\n              name: 'bank_code',\n              type: 'string',\n              required: true,\n              description: 'The bank code for the account'\n            }\n          ]\n        },\n        responses: [\n          {\n            status: 200,\n            description: 'Successful response',\n            body: `{\n  \"status\": \"success\",\n  \"data\": {\n    \"account_number\": \"0012345678\",\n    \"account_name\": \"John Doe\",\n    \"bank_id\": \"044\",\n    \"bank_name\": \"Access Bank\"\n  }\n}`\n          },\n          {\n            status: 400,\n            description: 'Bad Request',\n            body: `{\n  \"status\": \"error\",\n  \"message\": \"Invalid account details\"\n}`\n          }\n        ],\n        sampleCode: {\n          curl: `curl --request POST \\\\\n  --url http://localhost:5000/api/v1/developer/banks/verify \\\\\n  --header 'Content-Type: application/json' \\\\\n  --header 'X-API-Key: YOUR_API_KEY' \\\\\n  --header 'X-API-Secret: YOUR_API_SECRET' \\\\\n  --data '{\n    \"account_number\": \"0012345678\",\n    \"bank_code\": \"044\"\n}'`,\n          javascript: `const options = {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n    'X-API-Key': 'YOUR_API_KEY',\n    'X-API-Secret': 'YOUR_API_SECRET'\n  },\n  body: JSON.stringify({\n    account_number: '0012345678',\n    bank_code: '044'\n  })\n};\n\nfetch('http://localhost:5000/api/v1/developer/banks/verify', options)\n  .then(response => response.json())\n  .then(response => console.log(response))\n  .catch(err => console.error(err));`,\n          python: `import requests\nimport json\n\nurl = \"http://localhost:5000/api/v1/developer/banks/verify\"\n\npayload = json.dumps({\n    \"account_number\": \"0012345678\",\n    \"bank_code\": \"044\"\n})\n\nheaders = {\n    \"Content-Type\": \"application/json\",\n    \"X-API-Key\": \"YOUR_API_KEY\",\n    \"X-API-Secret\": \"YOUR_API_SECRET\"\n}\n\nresponse = requests.post(url, headers=headers, data=payload)\nprint(response.json())`\n        }\n      }\n    ]\n  },\n  {\n    name: 'Transactions',\n    description: 'Initiate and manage financial transactions',\n    endpoints: [\n      {\n        id: 'initiate-transfer',\n        name: 'Initiate Transfer',\n        description: 'Transfer funds to a bank account',\n        method: 'POST',\n        url: '/api/v1/developer/transactions/transfer',\n        headers: {\n          'X-API-Key': 'YOUR_API_KEY',\n          'X-API-Secret': 'YOUR_API_SECRET',\n          'Content-Type': 'application/json'\n        },\n        requestBody: {\n          type: 'object',\n          properties: [\n            {\n              name: 'amount',\n              type: 'number',\n              required: true,\n              description: 'Amount to transfer (in smallest currency unit, e.g., kobo for NGN)'\n            },\n            {\n              name: 'account_number',\n              type: 'string',\n              required: true,\n              description: 'Recipient bank account number'\n            },\n            {\n              name: 'bank_code',\n              type: 'string',\n              required: true,\n              description: 'Recipient bank code'\n            },\n            {\n              name: 'narration',\n              type: 'string',\n              required: false,\n              description: 'Description of the transfer'\n            },\n            {\n              name: 'reference',\n              type: 'string',\n              required: false,\n              description: 'Unique reference for the transaction'\n            }\n          ]\n        },\n        responses: [\n          {\n            status: 200,\n            description: 'Successful response',\n            body: `{\n  \"status\": \"success\",\n  \"data\": {\n    \"id\": \"TRF_12345678901234\",\n    \"reference\": \"REF_12345678901234\",\n    \"amount\": 500000,\n    \"fee\": 1000,\n    \"status\": \"processing\",\n    \"narration\": \"Payment for services\",\n    \"account_number\": \"0012345678\",\n    \"account_name\": \"John Doe\",\n    \"bank_code\": \"044\",\n    \"bank_name\": \"Access Bank\",\n    \"created_at\": \"2023-06-01T10:00:00Z\"\n  }\n}`\n          },\n          {\n            status: 400,\n            description: 'Bad Request',\n            body: `{\n  \"status\": \"error\",\n  \"message\": \"Insufficient balance\"\n}`\n          }\n        ],\n        sampleCode: {\n          curl: `curl --request POST \\\\\n  --url http://localhost:5000/api/v1/developer/transactions/transfer \\\\\n  --header 'Content-Type: application/json' \\\\\n  --header 'X-API-Key: YOUR_API_KEY' \\\\\n  --header 'X-API-Secret: YOUR_API_SECRET' \\\\\n  --data '{\n    \"amount\": 500000,\n    \"account_number\": \"0012345678\",\n    \"bank_code\": \"044\",\n    \"narration\": \"Payment for services\",\n    \"reference\": \"REF_12345678901234\"\n}'`,\n          javascript: `const options = {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n    'X-API-Key': 'YOUR_API_KEY',\n    'X-API-Secret': 'YOUR_API_SECRET'\n  },\n  body: JSON.stringify({\n    amount: 500000,\n    account_number: '0012345678',\n    bank_code: '044',\n    narration: 'Payment for services',\n    reference: 'REF_12345678901234'\n  })\n};\n\nfetch('http://localhost:5000/api/v1/developer/transactions/transfer', options)\n  .then(response => response.json())\n  .then(response => console.log(response))\n  .catch(err => console.error(err));`,\n          python: `import requests\nimport json\n\nurl = \"http://localhost:5000/api/v1/developer/transactions/transfer\"\n\npayload = json.dumps({\n    \"amount\": 500000,\n    \"account_number\": \"0012345678\",\n    \"bank_code\": \"044\",\n    \"narration\": \"Payment for services\",\n    \"reference\": \"REF_12345678901234\"\n})\n\nheaders = {\n    \"Content-Type\": \"application/json\",\n    \"X-API-Key\": \"YOUR_API_KEY\",\n    \"X-API-Secret\": \"YOUR_API_SECRET\"\n}\n\nresponse = requests.post(url, headers=headers, data=payload)\nprint(response.json())`\n        }\n      },\n      {\n        id: 'get-transaction',\n        name: 'Get Transaction',\n        description: 'Retrieve details of a specific transaction',\n        method: 'GET',\n        url: '/api/v1/developer/transactions/{id}',\n        headers: {\n          'X-API-Key': 'YOUR_API_KEY',\n          'X-API-Secret': 'YOUR_API_SECRET'\n        },\n        pathParams: [\n          {\n            name: 'id',\n            type: 'string',\n            description: 'Transaction ID'\n          }\n        ],\n        responses: [\n          {\n            status: 200,\n            description: 'Successful response',\n            body: `{\n  \"status\": \"success\",\n  \"data\": {\n    \"id\": \"TRF_12345678901234\",\n    \"reference\": \"REF_12345678901234\",\n    \"amount\": 500000,\n    \"fee\": 1000,\n    \"status\": \"successful\",\n    \"narration\": \"Payment for services\",\n    \"account_number\": \"0012345678\",\n    \"account_name\": \"John Doe\",\n    \"bank_code\": \"044\",\n    \"bank_name\": \"Access Bank\",\n    \"created_at\": \"2023-06-01T10:00:00Z\",\n    \"completed_at\": \"2023-06-01T10:01:30Z\"\n  }\n}`\n          },\n          {\n            status: 404,\n            description: 'Not Found',\n            body: `{\n  \"status\": \"error\",\n  \"message\": \"Transaction not found\"\n}`\n          }\n        ],\n        sampleCode: {\n          curl: `curl --request GET \\\\\n  --url http://localhost:5000/api/v1/developer/transactions/TRF_12345678901234 \\\\\n  --header 'X-API-Key: YOUR_API_KEY' \\\\\n  --header 'X-API-Secret: YOUR_API_SECRET'`,\n          javascript: `const options = {\n  method: 'GET',\n  headers: {\n    'X-API-Key': 'YOUR_API_KEY',\n    'X-API-Secret': 'YOUR_API_SECRET'\n  }\n};\n\nfetch('http://localhost:5000/api/v1/developer/transactions/TRF_12345678901234', options)\n  .then(response => response.json())\n  .then(response => console.log(response))\n  .catch(err => console.error(err));`,\n          python: `import requests\n\nurl = \"http://localhost:5000/api/v1/developer/transactions/TRF_12345678901234\"\n\nheaders = {\n    \"X-API-Key\": \"YOUR_API_KEY\",\n    \"X-API-Secret\": \"YOUR_API_SECRET\"\n}\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())`\n        }\n      }\n    ]\n  },\n  {\n    name: 'Webhooks',\n    description: 'Configure and manage webhooks for real-time notifications',\n    endpoints: [\n      {\n        id: 'create-webhook',\n        name: 'Create Webhook',\n        description: 'Register a new webhook URL for receiving event notifications',\n        method: 'POST',\n        url: '/api/v1/developer/webhooks',\n        headers: {\n          'X-API-Key': 'YOUR_API_KEY',\n          'X-API-Secret': 'YOUR_API_SECRET',\n          'Content-Type': 'application/json'\n        },\n        requestBody: {\n          type: 'object',\n          properties: [\n            {\n              name: 'url',\n              type: 'string',\n              required: true,\n              description: 'The webhook URL to receive notifications'\n            },\n            {\n              name: 'events',\n              type: 'array',\n              required: true,\n              description: 'Array of event types to subscribe to'\n            },\n            {\n              name: 'description',\n              type: 'string',\n              required: false,\n              description: 'A description of this webhook'\n            }\n          ]\n        },\n        responses: [\n          {\n            status: 200,\n            description: 'Successful response',\n            body: `{\n  \"status\": \"success\",\n  \"data\": {\n    \"id\": \"WHK_12345678901234\",\n    \"url\": \"https://your-server.com/webhook\",\n    \"events\": [\n      \"transfer.success\",\n      \"transfer.failed\"\n    ],\n    \"description\": \"Payment notifications webhook\",\n    \"secret\": \"whsec_abcdefghijklmnopqrstuvwxyz\",\n    \"created_at\": \"2023-06-01T10:00:00Z\"\n  }\n}`\n          },\n          {\n            status: 400,\n            description: 'Bad Request',\n            body: `{\n  \"status\": \"error\",\n  \"message\": \"Invalid webhook URL\"\n}`\n          }\n        ],\n        sampleCode: {\n          curl: `curl --request POST \\\\\n  --url http://localhost:5000/api/v1/developer/webhooks \\\\\n  --header 'Content-Type: application/json' \\\\\n  --header 'X-API-Key: YOUR_API_KEY' \\\\\n  --header 'X-API-Secret: YOUR_API_SECRET' \\\\\n  --data '{\n    \"url\": \"https://your-server.com/webhook\",\n    \"events\": [\"transfer.success\", \"transfer.failed\"],\n    \"description\": \"Payment notifications webhook\"\n}'`,\n          javascript: `const options = {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n    'X-API-Key': 'YOUR_API_KEY',\n    'X-API-Secret': 'YOUR_API_SECRET'\n  },\n  body: JSON.stringify({\n    url: 'https://your-server.com/webhook',\n    events: ['transfer.success', 'transfer.failed'],\n    description: 'Payment notifications webhook'\n  })\n};\n\nfetch('http://localhost:5000/api/v1/developer/webhooks', options)\n  .then(response => response.json())\n  .then(response => console.log(response))\n  .catch(err => console.error(err));`,\n          python: `import requests\nimport json\n\nurl = \"http://localhost:5000/api/v1/developer/webhooks\"\n\npayload = json.dumps({\n    \"url\": \"https://your-server.com/webhook\",\n    \"events\": [\"transfer.success\", \"transfer.failed\"],\n    \"description\": \"Payment notifications webhook\"\n})\n\nheaders = {\n    \"Content-Type\": \"application/json\",\n    \"X-API-Key\": \"YOUR_API_KEY\",\n    \"X-API-Secret\": \"YOUR_API_SECRET\"\n}\n\nresponse = requests.post(url, headers=headers, data=payload)\nprint(response.json())`\n        }\n      }\n    ]\n  }\n]; "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 555, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Documents/workstation/2025/lemu-project/developer/src/app/page.tsx"],"sourcesContent":["import Link from 'next/link';\nimport { API_DATA } from './api/apiData';\n\nexport default function Home() {\n  return (\n    <div>\n      {/* Hero section */}\n      <div className=\"bg-blue-600\">\n        <div className=\"max-w-7xl mx-auto py-16 px-4 sm:py-24 sm:px-6 lg:px-8\">\n          <div className=\"text-center\">\n            <h1 className=\"text-4xl font-extrabold text-white sm:text-5xl sm:tracking-tight lg:text-6xl\">\n              Lemu Banking API\n            </h1>\n            <p className=\"max-w-xl mt-5 mx-auto text-xl text-blue-100\">\n              Powerful banking and payment APIs for developers to build innovative financial solutions.\n            </p>\n            <div className=\"mt-8 flex justify-center\">\n              <div className=\"inline-flex rounded-md shadow\">\n                <Link href=\"/reference/get-bank-list\">\n                  <div className=\"inline-flex items-center justify-center px-5 py-3 border border-transparent text-base font-medium rounded-md text-blue-600 bg-white hover:bg-blue-50\">\n                    API Reference\n                  </div>\n                </Link>\n              </div>\n              <div className=\"ml-3 inline-flex\">\n                <Link href=\"#quickstart\">\n                  <div className=\"inline-flex items-center justify-center px-5 py-3 border border-transparent text-base font-medium rounded-md text-white bg-blue-700 hover:bg-blue-800\">\n                    Quick Start\n                  </div>\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      {/* Features */}\n      <div className=\"py-12 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"lg:text-center\">\n            <h2 className=\"text-base text-blue-600 font-semibold tracking-wide uppercase\">Features</h2>\n            <p className=\"mt-2 text-3xl leading-8 font-extrabold tracking-tight text-gray-900 sm:text-4xl\">\n              Everything you need to build financial solutions\n            </p>\n            <p className=\"mt-4 max-w-2xl text-xl text-gray-500 lg:mx-auto\">\n              Our API provides a comprehensive suite of banking and payment services.\n            </p>\n          </div>\n\n          <div className=\"mt-10\">\n            <div className=\"space-y-10 md:space-y-0 md:grid md:grid-cols-2 md:gap-x-8 md:gap-y-10\">\n              <div className=\"flex\">\n                <div className=\"flex-shrink-0\">\n                  <div className=\"flex items-center justify-center h-12 w-12 rounded-md bg-blue-500 text-white\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 6l3 1m0 0l-3 9a5.002 5.002 0 006.001 0M6 7l3 9M6 7l6-2m6 2l3-1m-3 1l-3 9a5.002 5.002 0 006.001 0M18 7l3 9m-3-9l-6-2m0-2v2m0 16V5m0 16H9m3 0h3\" />\n                    </svg>\n                  </div>\n                </div>\n                <div className=\"ml-4\">\n                  <h3 className=\"text-lg leading-6 font-medium text-gray-900\">Account Verification</h3>\n                  <p className=\"mt-2 text-base text-gray-500\">\n                    Verify bank account details with real-time validation and seamless integration.\n                  </p>\n                </div>\n              </div>\n\n              <div className=\"flex\">\n                <div className=\"flex-shrink-0\">\n                  <div className=\"flex items-center justify-center h-12 w-12 rounded-md bg-blue-500 text-white\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7h12m0 0l-4-4m4 4l-4 4m0 6H4m0 0l4 4m-4-4l4-4\" />\n                    </svg>\n                  </div>\n                </div>\n                <div className=\"ml-4\">\n                  <h3 className=\"text-lg leading-6 font-medium text-gray-900\">Instant Transfers</h3>\n                  <p className=\"mt-2 text-base text-gray-500\">\n                    Initiate and process bank transfers quickly and securely across multiple financial institutions.\n                  </p>\n                </div>\n              </div>\n\n              <div className=\"flex\">\n                <div className=\"flex-shrink-0\">\n                  <div className=\"flex items-center justify-center h-12 w-12 rounded-md bg-blue-500 text-white\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\" />\n                    </svg>\n                  </div>\n                </div>\n                <div className=\"ml-4\">\n                  <h3 className=\"text-lg leading-6 font-medium text-gray-900\">Secure Authentication</h3>\n                  <p className=\"mt-2 text-base text-gray-500\">\n                    Industry-standard security practices and authentication methods to protect sensitive information.\n                  </p>\n                </div>\n              </div>\n\n              <div className=\"flex\">\n                <div className=\"flex-shrink-0\">\n                  <div className=\"flex items-center justify-center h-12 w-12 rounded-md bg-blue-500 text-white\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                    </svg>\n                  </div>\n                </div>\n                <div className=\"ml-4\">\n                  <h3 className=\"text-lg leading-6 font-medium text-gray-900\">Transaction Analytics</h3>\n                  <p className=\"mt-2 text-base text-gray-500\">\n                    Detailed transaction data and analytics to help monitor and optimize financial operations.\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      {/* API Overview */}\n      <div id=\"quickstart\" className=\"py-12 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"lg:text-center\">\n            <h2 className=\"text-base text-blue-600 font-semibold tracking-wide uppercase\">Quick Start</h2>\n            <p className=\"mt-2 text-3xl leading-8 font-extrabold tracking-tight text-gray-900 sm:text-4xl\">\n              Start integrating in minutes\n            </p>\n            <p className=\"mt-4 max-w-2xl text-xl text-gray-500 lg:mx-auto\">\n              Follow these simple steps to get started with our API.\n            </p>\n          </div>\n          \n          <div className=\"mt-10\">\n            <div className=\"prose prose-blue max-w-none\">\n              <h3>1. Register and Get API Keys</h3>\n              <p>\n                To use the Lemu API, you need to obtain API keys. Click on the \"Get API Key\" button in the header to generate your unique API key and secret.\n              </p>\n              \n              <h3>2. Make Your First API Call</h3>\n              <p>\n                Let's start with a simple GET request to retrieve the list of supported banks:\n              </p>\n              \n              <div className=\"bg-white shadow-md rounded-lg overflow-hidden\">\n                <div className=\"bg-gray-100 px-4 py-2 border-b\">\n                  <code className=\"text-sm\">cURL</code>\n                </div>\n                <div className=\"p-4\">\n                  <pre className=\"text-sm overflow-x-auto\">\n{`curl --request GET \\\\\n  --url http://localhost:5000/api/v1/developer/banks/list \\\\\n  --header \"X-API-Key: YOUR_API_KEY\" \\\\\n  --header \"X-API-Secret: YOUR_API_SECRET\"`}\n                  </pre>\n                </div>\n              </div>\n              \n              <h3>3. Explore the API Reference</h3>\n              <p>\n                Check out our comprehensive API reference documentation for details on all available endpoints.\n              </p>\n              \n              <div className=\"mt-8\">\n                <Link href=\"/reference/get-bank-list\">\n                  <div className=\"inline-flex items-center px-4 py-2 border border-transparent text-base font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700\">\n                    View API Reference\n                  </div>\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      {/* API Categories */}\n      <div className=\"py-12 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"lg:text-center\">\n            <h2 className=\"text-base text-blue-600 font-semibold tracking-wide uppercase\">API Categories</h2>\n            <p className=\"mt-2 text-3xl leading-8 font-extrabold tracking-tight text-gray-900 sm:text-4xl\">\n              Explore our API endpoints\n            </p>\n            <p className=\"mt-4 max-w-2xl text-xl text-gray-500 lg:mx-auto\">\n              Browse through our API categories to find what you need.\n            </p>\n          </div>\n          \n          <div className=\"mt-10\">\n            <div className=\"grid grid-cols-1 gap-8 sm:grid-cols-2 lg:grid-cols-3\">\n              {API_DATA.map((category) => (\n                <div key={category.name} className=\"bg-white overflow-hidden shadow rounded-lg\">\n                  <div className=\"px-4 py-5 sm:p-6\">\n                    <h3 className=\"text-lg leading-6 font-medium text-gray-900\">{category.name}</h3>\n                    <p className=\"mt-1 text-sm text-gray-500\">{category.description}</p>\n                    <div className=\"mt-4\">\n                      <ul className=\"space-y-2\">\n                        {category.endpoints.map((endpoint) => (\n                          <li key={endpoint.id}>\n                            <Link href={`/reference/${endpoint.id}`}>\n                              <div className=\"text-sm text-blue-600 hover:text-blue-800 flex items-center\">\n                                <span className={`inline-block w-12 text-xs font-mono mr-2 px-1 py-0.5 rounded \n                                  ${endpoint.method === 'GET' ? 'bg-green-100 text-green-800' : ''}\n                                  ${endpoint.method === 'POST' ? 'bg-blue-100 text-blue-800' : ''}\n                                  ${endpoint.method === 'PUT' ? 'bg-yellow-100 text-yellow-800' : ''}\n                                  ${endpoint.method === 'DELETE' ? 'bg-red-100 text-red-800' : ''}\n                                `}>\n                                  {endpoint.method}\n                                </span>\n                                {endpoint.name}\n                              </div>\n                            </Link>\n                          </li>\n                        ))}\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEe,SAAS;IACtB,qBACE,8OAAC;;0BAEC,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAG,WAAU;0CAA+E;;;;;;0CAG7F,8OAAC;gCAAE,WAAU;0CAA8C;;;;;;0CAG3D,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;kDACb,cAAA,8OAAC,4JAAA,CAAA,UAAI;4CAAC,MAAK;sDACT,cAAA,8OAAC;gDAAI,WAAU;0DAAuJ;;;;;;;;;;;;;;;;kDAK1K,8OAAC;wCAAI,WAAU;kDACb,cAAA,8OAAC,4JAAA,CAAA,UAAI;4CAAC,MAAK;sDACT,cAAA,8OAAC;gDAAI,WAAU;0DAAwJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAWnL,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAG,WAAU;8CAAgE;;;;;;8CAC9E,8OAAC;oCAAE,WAAU;8CAAkF;;;;;;8CAG/F,8OAAC;oCAAE,WAAU;8CAAkD;;;;;;;;;;;;sCAKjE,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAI,WAAU;0DACb,cAAA,8OAAC;oDAAI,WAAU;8DACb,cAAA,8OAAC;wDAAI,OAAM;wDAA6B,WAAU;wDAAU,MAAK;wDAAO,SAAQ;wDAAY,QAAO;kEACjG,cAAA,8OAAC;4DAAK,eAAc;4DAAQ,gBAAe;4DAAQ,aAAa;4DAAG,GAAE;;;;;;;;;;;;;;;;;;;;;0DAI3E,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDAAG,WAAU;kEAA8C;;;;;;kEAC5D,8OAAC;wDAAE,WAAU;kEAA+B;;;;;;;;;;;;;;;;;;kDAMhD,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAI,WAAU;0DACb,cAAA,8OAAC;oDAAI,WAAU;8DACb,cAAA,8OAAC;wDAAI,OAAM;wDAA6B,WAAU;wDAAU,MAAK;wDAAO,SAAQ;wDAAY,QAAO;kEACjG,cAAA,8OAAC;4DAAK,eAAc;4DAAQ,gBAAe;4DAAQ,aAAa;4DAAG,GAAE;;;;;;;;;;;;;;;;;;;;;0DAI3E,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDAAG,WAAU;kEAA8C;;;;;;kEAC5D,8OAAC;wDAAE,WAAU;kEAA+B;;;;;;;;;;;;;;;;;;kDAMhD,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAI,WAAU;0DACb,cAAA,8OAAC;oDAAI,WAAU;8DACb,cAAA,8OAAC;wDAAI,OAAM;wDAA6B,WAAU;wDAAU,MAAK;wDAAO,SAAQ;wDAAY,QAAO;kEACjG,cAAA,8OAAC;4DAAK,eAAc;4DAAQ,gBAAe;4DAAQ,aAAa;4DAAG,GAAE;;;;;;;;;;;;;;;;;;;;;0DAI3E,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDAAG,WAAU;kEAA8C;;;;;;kEAC5D,8OAAC;wDAAE,WAAU;kEAA+B;;;;;;;;;;;;;;;;;;kDAMhD,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAI,WAAU;0DACb,cAAA,8OAAC;oDAAI,WAAU;8DACb,cAAA,8OAAC;wDAAI,OAAM;wDAA6B,WAAU;wDAAU,MAAK;wDAAO,SAAQ;wDAAY,QAAO;kEACjG,cAAA,8OAAC;4DAAK,eAAc;4DAAQ,gBAAe;4DAAQ,aAAa;4DAAG,GAAE;;;;;;;;;;;;;;;;;;;;;0DAI3E,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDAAG,WAAU;kEAA8C;;;;;;kEAC5D,8OAAC;wDAAE,WAAU;kEAA+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAWxD,8OAAC;gBAAI,IAAG;gBAAa,WAAU;0BAC7B,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAG,WAAU;8CAAgE;;;;;;8CAC9E,8OAAC;oCAAE,WAAU;8CAAkF;;;;;;8CAG/F,8OAAC;oCAAE,WAAU;8CAAkD;;;;;;;;;;;;sCAKjE,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;kDAAG;;;;;;kDACJ,8OAAC;kDAAE;;;;;;kDAIH,8OAAC;kDAAG;;;;;;kDACJ,8OAAC;kDAAE;;;;;;kDAIH,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAI,WAAU;0DACb,cAAA,8OAAC;oDAAK,WAAU;8DAAU;;;;;;;;;;;0DAE5B,8OAAC;gDAAI,WAAU;0DACb,cAAA,8OAAC;oDAAI,WAAU;8DAChC,CAAC;;;0CAGwC,CAAC;;;;;;;;;;;;;;;;;kDAK7B,8OAAC;kDAAG;;;;;;kDACJ,8OAAC;kDAAE;;;;;;kDAIH,8OAAC;wCAAI,WAAU;kDACb,cAAA,8OAAC,4JAAA,CAAA,UAAI;4CAAC,MAAK;sDACT,cAAA,8OAAC;gDAAI,WAAU;0DAAmJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAW9K,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAG,WAAU;8CAAgE;;;;;;8CAC9E,8OAAC;oCAAE,WAAU;8CAAkF;;;;;;8CAG/F,8OAAC;oCAAE,WAAU;8CAAkD;;;;;;;;;;;;sCAKjE,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAI,WAAU;0CACZ,4HAAA,CAAA,WAAQ,CAAC,GAAG,CAAC,CAAC,yBACb,8OAAC;wCAAwB,WAAU;kDACjC,cAAA,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDAAG,WAAU;8DAA+C,SAAS,IAAI;;;;;;8DAC1E,8OAAC;oDAAE,WAAU;8DAA8B,SAAS,WAAW;;;;;;8DAC/D,8OAAC;oDAAI,WAAU;8DACb,cAAA,8OAAC;wDAAG,WAAU;kEACX,SAAS,SAAS,CAAC,GAAG,CAAC,CAAC,yBACvB,8OAAC;0EACC,cAAA,8OAAC,4JAAA,CAAA,UAAI;oEAAC,MAAM,CAAC,WAAW,EAAE,SAAS,EAAE,EAAE;8EACrC,cAAA,8OAAC;wEAAI,WAAU;;0FACb,8OAAC;gFAAK,WAAW,CAAC;kCAChB,EAAE,SAAS,MAAM,KAAK,QAAQ,gCAAgC,GAAG;kCACjE,EAAE,SAAS,MAAM,KAAK,SAAS,8BAA8B,GAAG;kCAChE,EAAE,SAAS,MAAM,KAAK,QAAQ,kCAAkC,GAAG;kCACnE,EAAE,SAAS,MAAM,KAAK,WAAW,4BAA4B,GAAG;gCAClE,CAAC;0FACE,SAAS,MAAM;;;;;;4EAEjB,SAAS,IAAI;;;;;;;;;;;;+DAXX,SAAS,EAAE;;;;;;;;;;;;;;;;;;;;;uCAPpB,SAAS,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCvC","debugId":null}},
    {"offset": {"line": 1358, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Documents/workstation/2025/lemu-project/developer/node_modules/next/dist/client/app-dir/link.js/proxy.cjs"],"sourcesContent":["const { createClientModuleProxy } = require(\"react-server-dom-turbopack/server.edge\");\n\n__turbopack_context__.n(createClientModuleProxy(\"[project]/node_modules/next/dist/client/app-dir/link.js <module evaluation>\"));\n"],"names":[],"mappings":"AAAA,MAAM,EAAE,uBAAuB,EAAE;AAEjC,sBAAsB,CAAC,CAAC,wBAAwB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1365, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Documents/workstation/2025/lemu-project/developer/node_modules/next/dist/client/app-dir/link.js/proxy.cjs"],"sourcesContent":["const { createClientModuleProxy } = require(\"react-server-dom-turbopack/server.edge\");\n\n__turbopack_context__.n(createClientModuleProxy(\"[project]/node_modules/next/dist/client/app-dir/link.js\"));\n"],"names":[],"mappings":"AAAA,MAAM,EAAE,uBAAuB,EAAE;AAEjC,sBAAsB,CAAC,CAAC,wBAAwB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1373, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Documents/workstation/2025/lemu-project/developer/node_modules/next/src/client/app-dir/link.tsx"],"sourcesContent":["'use client'\n\nimport React, { createContext, useContext, useOptimistic, useRef } from 'react'\nimport type { UrlObject } from 'url'\nimport { formatUrl } from '../../shared/lib/router/utils/format-url'\nimport { AppRouterContext } from '../../shared/lib/app-router-context.shared-runtime'\nimport { PrefetchKind } from '../components/router-reducer/router-reducer-types'\nimport { useMergedRef } from '../use-merged-ref'\nimport { isAbsoluteUrl } from '../../shared/lib/utils'\nimport { addBasePath } from '../add-base-path'\nimport { warnOnce } from '../../shared/lib/utils/warn-once'\nimport type { PENDING_LINK_STATUS } from '../components/links'\nimport {\n  IDLE_LINK_STATUS,\n  mountLinkInstance,\n  onNavigationIntent,\n  unmountLinkForCurrentNavigation,\n  unmountPrefetchableInstance,\n  type LinkInstance,\n} from '../components/links'\nimport { isLocalURL } from '../../shared/lib/router/utils/is-local-url'\nimport { dispatchNavigateAction } from '../components/app-router-instance'\nimport { errorOnce } from '../../shared/lib/utils/error-once'\n\ntype Url = string | UrlObject\ntype RequiredKeys<T> = {\n  [K in keyof T]-?: {} extends Pick<T, K> ? never : K\n}[keyof T]\ntype OptionalKeys<T> = {\n  [K in keyof T]-?: {} extends Pick<T, K> ? K : never\n}[keyof T]\n\ntype OnNavigateEventHandler = (event: { preventDefault: () => void }) => void\n\ntype InternalLinkProps = {\n  /**\n   * **Required**. The path or URL to navigate to. It can also be an object (similar to `URL`).\n   *\n   * @example\n   * ```tsx\n   * // Navigate to /dashboard:\n   * <Link href=\"/dashboard\">Dashboard</Link>\n   *\n   * // Navigate to /about?name=test:\n   * <Link href={{ pathname: '/about', query: { name: 'test' } }}>\n   *   About\n   * </Link>\n   * ```\n   *\n   * @remarks\n   * - For external URLs, use a fully qualified URL such as `https://...`.\n   * - In the App Router, dynamic routes must not include bracketed segments in `href`.\n   */\n  href: Url\n\n  /**\n   * @deprecated v10.0.0: `href` props pointing to a dynamic route are\n   * automatically resolved and no longer require the `as` prop.\n   */\n  as?: Url\n\n  /**\n   * Replace the current `history` state instead of adding a new URL into the stack.\n   *\n   * @defaultValue `false`\n   *\n   * @example\n   * ```tsx\n   * <Link href=\"/about\" replace>\n   *   About (replaces the history state)\n   * </Link>\n   * ```\n   */\n  replace?: boolean\n\n  /**\n   * Whether to override the default scroll behavior. If `true`, Next.js attempts to maintain\n   * the scroll position if the newly navigated page is still visible. If not, it scrolls to the top.\n   *\n   * If `false`, Next.js will not modify the scroll behavior at all.\n   *\n   * @defaultValue `true`\n   *\n   * @example\n   * ```tsx\n   * <Link href=\"/dashboard\" scroll={false}>\n   *   No auto scroll\n   * </Link>\n   * ```\n   */\n  scroll?: boolean\n\n  /**\n   * Update the path of the current page without rerunning data fetching methods\n   * like `getStaticProps`, `getServerSideProps`, or `getInitialProps`.\n   *\n   * @remarks\n   * `shallow` only applies to the Pages Router. For the App Router, see the\n   * [following documentation](https://nextjs.org/docs/app/building-your-application/routing/linking-and-navigating#using-the-native-history-api).\n   *\n   * @defaultValue `false`\n   *\n   * @example\n   * ```tsx\n   * <Link href=\"/blog\" shallow>\n   *   Shallow navigation\n   * </Link>\n   * ```\n   */\n  shallow?: boolean\n\n  /**\n   * Forces `Link` to pass its `href` to the child component. Useful if the child is a custom\n   * component that wraps an `<a>` tag, or if you're using certain styling libraries.\n   *\n   * @defaultValue `false`\n   *\n   * @example\n   * ```tsx\n   * <Link href=\"/dashboard\" passHref>\n   *   <MyStyledAnchor>Dashboard</MyStyledAnchor>\n   * </Link>\n   * ```\n   */\n  passHref?: boolean\n\n  /**\n   * Prefetch the page in the background.\n   * Any `<Link />` that is in the viewport (initially or through scroll) will be prefetched.\n   * Prefetch can be disabled by passing `prefetch={false}`.\n   *\n   * @remarks\n   * Prefetching is only enabled in production.\n   *\n   * - In the **App Router**:\n   *   - `null` (default): Prefetch behavior depends on static vs dynamic routes:\n   *     - Static routes: fully prefetched\n   *     - Dynamic routes: partial prefetch to the nearest segment with a `loading.js`\n   *   - `true`: Always prefetch the full route and data.\n   *   - `false`: Disable prefetching on both viewport and hover.\n   * - In the **Pages Router**:\n   *   - `true` (default): Prefetches the route and data in the background on viewport or hover.\n   *   - `false`: Prefetch only on hover, not on viewport.\n   *\n   * @defaultValue `true` (Pages Router) or `null` (App Router)\n   *\n   * @example\n   * ```tsx\n   * <Link href=\"/dashboard\" prefetch={false}>\n   *   Dashboard\n   * </Link>\n   * ```\n   */\n  prefetch?: boolean | null\n\n  /**\n   * (unstable) Switch to a dynamic prefetch on hover. Effectively the same as\n   * updating the prefetch prop to `true` in a mouse event.\n   */\n  unstable_dynamicOnHover?: boolean\n\n  /**\n   * The active locale is automatically prepended in the Pages Router. `locale` allows for providing\n   * a different locale, or can be set to `false` to opt out of automatic locale behavior.\n   *\n   * @remarks\n   * Note: locale only applies in the Pages Router and is ignored in the App Router.\n   *\n   * @example\n   * ```tsx\n   * // Use the 'fr' locale:\n   * <Link href=\"/about\" locale=\"fr\">\n   *   About (French)\n   * </Link>\n   *\n   * // Disable locale prefix:\n   * <Link href=\"/about\" locale={false}>\n   *   About (no locale prefix)\n   * </Link>\n   * ```\n   */\n  locale?: string | false\n\n  /**\n   * Enable legacy link behavior, requiring an `<a>` tag to wrap the child content\n   * if the child is a string or number.\n   *\n   * @deprecated This will be removed in v16\n   * @defaultValue `false`\n   * @see https://github.com/vercel/next.js/commit/489e65ed98544e69b0afd7e0cfc3f9f6c2b803b7\n   */\n  legacyBehavior?: boolean\n\n  /**\n   * Optional event handler for when the mouse pointer is moved onto the `<Link>`.\n   */\n  onMouseEnter?: React.MouseEventHandler<HTMLAnchorElement>\n\n  /**\n   * Optional event handler for when the `<Link>` is touched.\n   */\n  onTouchStart?: React.TouchEventHandler<HTMLAnchorElement>\n\n  /**\n   * Optional event handler for when the `<Link>` is clicked.\n   */\n  onClick?: React.MouseEventHandler<HTMLAnchorElement>\n\n  /**\n   * Optional event handler for when the `<Link>` is navigated.\n   */\n  onNavigate?: OnNavigateEventHandler\n}\n\n// TODO-APP: Include the full set of Anchor props\n// adding this to the publicly exported type currently breaks existing apps\n\n// `RouteInferType` is a stub here to avoid breaking `typedRoutes` when the type\n// isn't generated yet. It will be replaced when the webpack plugin runs.\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport type LinkProps<RouteInferType = any> = InternalLinkProps\ntype LinkPropsRequired = RequiredKeys<LinkProps>\ntype LinkPropsOptional = OptionalKeys<Omit<InternalLinkProps, 'locale'>>\n\nfunction isModifiedEvent(event: React.MouseEvent): boolean {\n  const eventTarget = event.currentTarget as HTMLAnchorElement | SVGAElement\n  const target = eventTarget.getAttribute('target')\n  return (\n    (target && target !== '_self') ||\n    event.metaKey ||\n    event.ctrlKey ||\n    event.shiftKey ||\n    event.altKey || // triggers resource download\n    (event.nativeEvent && event.nativeEvent.which === 2)\n  )\n}\n\nfunction linkClicked(\n  e: React.MouseEvent,\n  href: string,\n  as: string,\n  linkInstanceRef: React.RefObject<LinkInstance | null>,\n  replace?: boolean,\n  scroll?: boolean,\n  onNavigate?: OnNavigateEventHandler\n): void {\n  const { nodeName } = e.currentTarget\n\n  // anchors inside an svg have a lowercase nodeName\n  const isAnchorNodeName = nodeName.toUpperCase() === 'A'\n\n  if (\n    (isAnchorNodeName && isModifiedEvent(e)) ||\n    e.currentTarget.hasAttribute('download')\n  ) {\n    // ignore click for browser’s default behavior\n    return\n  }\n\n  if (!isLocalURL(href)) {\n    if (replace) {\n      // browser default behavior does not replace the history state\n      // so we need to do it manually\n      e.preventDefault()\n      location.replace(href)\n    }\n\n    // ignore click for browser’s default behavior\n    return\n  }\n\n  e.preventDefault()\n\n  const navigate = () => {\n    if (onNavigate) {\n      let isDefaultPrevented = false\n\n      onNavigate({\n        preventDefault: () => {\n          isDefaultPrevented = true\n        },\n      })\n\n      if (isDefaultPrevented) {\n        return\n      }\n    }\n\n    dispatchNavigateAction(\n      as || href,\n      replace ? 'replace' : 'push',\n      scroll ?? true,\n      linkInstanceRef.current\n    )\n  }\n\n  React.startTransition(navigate)\n}\n\nfunction formatStringOrUrl(urlObjOrString: UrlObject | string): string {\n  if (typeof urlObjOrString === 'string') {\n    return urlObjOrString\n  }\n\n  return formatUrl(urlObjOrString)\n}\n\n/**\n * A React component that extends the HTML `<a>` element to provide\n * [prefetching](https://nextjs.org/docs/app/building-your-application/routing/linking-and-navigating#2-prefetching)\n * and client-side navigation. This is the primary way to navigate between routes in Next.js.\n *\n * @remarks\n * - Prefetching is only enabled in production.\n *\n * @see https://nextjs.org/docs/app/api-reference/components/link\n */\nexport default function LinkComponent(\n  props: LinkProps & {\n    children: React.ReactNode\n    ref: React.Ref<HTMLAnchorElement>\n  }\n) {\n  const [linkStatus, setOptimisticLinkStatus] = useOptimistic(IDLE_LINK_STATUS)\n\n  let children: React.ReactNode\n\n  const linkInstanceRef = useRef<LinkInstance | null>(null)\n\n  const {\n    href: hrefProp,\n    as: asProp,\n    children: childrenProp,\n    prefetch: prefetchProp = null,\n    passHref,\n    replace,\n    shallow,\n    scroll,\n    onClick,\n    onMouseEnter: onMouseEnterProp,\n    onTouchStart: onTouchStartProp,\n    legacyBehavior = false,\n    onNavigate,\n    ref: forwardedRef,\n    unstable_dynamicOnHover,\n    ...restProps\n  } = props\n\n  children = childrenProp\n\n  if (\n    legacyBehavior &&\n    (typeof children === 'string' || typeof children === 'number')\n  ) {\n    children = <a>{children}</a>\n  }\n\n  const router = React.useContext(AppRouterContext)\n\n  const prefetchEnabled = prefetchProp !== false\n  /**\n   * The possible states for prefetch are:\n   * - null: this is the default \"auto\" mode, where we will prefetch partially if the link is in the viewport\n   * - true: we will prefetch if the link is visible and prefetch the full page, not just partially\n   * - false: we will not prefetch if in the viewport at all\n   * - 'unstable_dynamicOnHover': this starts in \"auto\" mode, but switches to \"full\" when the link is hovered\n   */\n  const appPrefetchKind =\n    prefetchProp === null ? PrefetchKind.AUTO : PrefetchKind.FULL\n\n  if (process.env.NODE_ENV !== 'production') {\n    function createPropError(args: {\n      key: string\n      expected: string\n      actual: string\n    }) {\n      return new Error(\n        `Failed prop type: The prop \\`${args.key}\\` expects a ${args.expected} in \\`<Link>\\`, but got \\`${args.actual}\\` instead.` +\n          (typeof window !== 'undefined'\n            ? \"\\nOpen your browser's console to view the Component stack trace.\"\n            : '')\n      )\n    }\n\n    // TypeScript trick for type-guarding:\n    const requiredPropsGuard: Record<LinkPropsRequired, true> = {\n      href: true,\n    } as const\n    const requiredProps: LinkPropsRequired[] = Object.keys(\n      requiredPropsGuard\n    ) as LinkPropsRequired[]\n    requiredProps.forEach((key: LinkPropsRequired) => {\n      if (key === 'href') {\n        if (\n          props[key] == null ||\n          (typeof props[key] !== 'string' && typeof props[key] !== 'object')\n        ) {\n          throw createPropError({\n            key,\n            expected: '`string` or `object`',\n            actual: props[key] === null ? 'null' : typeof props[key],\n          })\n        }\n      } else {\n        // TypeScript trick for type-guarding:\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const _: never = key\n      }\n    })\n\n    // TypeScript trick for type-guarding:\n    const optionalPropsGuard: Record<LinkPropsOptional, true> = {\n      as: true,\n      replace: true,\n      scroll: true,\n      shallow: true,\n      passHref: true,\n      prefetch: true,\n      unstable_dynamicOnHover: true,\n      onClick: true,\n      onMouseEnter: true,\n      onTouchStart: true,\n      legacyBehavior: true,\n      onNavigate: true,\n    } as const\n    const optionalProps: LinkPropsOptional[] = Object.keys(\n      optionalPropsGuard\n    ) as LinkPropsOptional[]\n    optionalProps.forEach((key: LinkPropsOptional) => {\n      const valType = typeof props[key]\n\n      if (key === 'as') {\n        if (props[key] && valType !== 'string' && valType !== 'object') {\n          throw createPropError({\n            key,\n            expected: '`string` or `object`',\n            actual: valType,\n          })\n        }\n      } else if (\n        key === 'onClick' ||\n        key === 'onMouseEnter' ||\n        key === 'onTouchStart' ||\n        key === 'onNavigate'\n      ) {\n        if (props[key] && valType !== 'function') {\n          throw createPropError({\n            key,\n            expected: '`function`',\n            actual: valType,\n          })\n        }\n      } else if (\n        key === 'replace' ||\n        key === 'scroll' ||\n        key === 'shallow' ||\n        key === 'passHref' ||\n        key === 'prefetch' ||\n        key === 'legacyBehavior' ||\n        key === 'unstable_dynamicOnHover'\n      ) {\n        if (props[key] != null && valType !== 'boolean') {\n          throw createPropError({\n            key,\n            expected: '`boolean`',\n            actual: valType,\n          })\n        }\n      } else {\n        // TypeScript trick for type-guarding:\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const _: never = key\n      }\n    })\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (props.locale) {\n      warnOnce(\n        'The `locale` prop is not supported in `next/link` while using the `app` router. Read more about app router internalization: https://nextjs.org/docs/app/building-your-application/routing/internationalization'\n      )\n    }\n    if (!asProp) {\n      let href: string | undefined\n      if (typeof hrefProp === 'string') {\n        href = hrefProp\n      } else if (\n        typeof hrefProp === 'object' &&\n        typeof hrefProp.pathname === 'string'\n      ) {\n        href = hrefProp.pathname\n      }\n\n      if (href) {\n        const hasDynamicSegment = href\n          .split('/')\n          .some((segment) => segment.startsWith('[') && segment.endsWith(']'))\n\n        if (hasDynamicSegment) {\n          throw new Error(\n            `Dynamic href \\`${href}\\` found in <Link> while using the \\`/app\\` router, this is not supported. Read more: https://nextjs.org/docs/messages/app-dir-dynamic-href`\n          )\n        }\n      }\n    }\n  }\n\n  const { href, as } = React.useMemo(() => {\n    const resolvedHref = formatStringOrUrl(hrefProp)\n    return {\n      href: resolvedHref,\n      as: asProp ? formatStringOrUrl(asProp) : resolvedHref,\n    }\n  }, [hrefProp, asProp])\n\n  // This will return the first child, if multiple are provided it will throw an error\n  let child: any\n  if (legacyBehavior) {\n    if (process.env.NODE_ENV === 'development') {\n      if (onClick) {\n        console.warn(\n          `\"onClick\" was passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but \"legacyBehavior\" was set. The legacy behavior requires onClick be set on the child of next/link`\n        )\n      }\n      if (onMouseEnterProp) {\n        console.warn(\n          `\"onMouseEnter\" was passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but \"legacyBehavior\" was set. The legacy behavior requires onMouseEnter be set on the child of next/link`\n        )\n      }\n      try {\n        child = React.Children.only(children)\n      } catch (err) {\n        if (!children) {\n          throw new Error(\n            `No children were passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but one child is required https://nextjs.org/docs/messages/link-no-children`\n          )\n        }\n        throw new Error(\n          `Multiple children were passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but only one child is supported https://nextjs.org/docs/messages/link-multiple-children` +\n            (typeof window !== 'undefined'\n              ? \" \\nOpen your browser's console to view the Component stack trace.\"\n              : '')\n        )\n      }\n    } else {\n      child = React.Children.only(children)\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      if ((children as any)?.type === 'a') {\n        throw new Error(\n          'Invalid <Link> with <a> child. Please remove <a> or use <Link legacyBehavior>.\\nLearn more: https://nextjs.org/docs/messages/invalid-new-link-with-extra-anchor'\n        )\n      }\n    }\n  }\n\n  const childRef: any = legacyBehavior\n    ? child && typeof child === 'object' && child.ref\n    : forwardedRef\n\n  // Use a callback ref to attach an IntersectionObserver to the anchor tag on\n  // mount. In the future we will also use this to keep track of all the\n  // currently mounted <Link> instances, e.g. so we can re-prefetch them after\n  // a revalidation or refresh.\n  const observeLinkVisibilityOnMount = React.useCallback(\n    (element: HTMLAnchorElement | SVGAElement) => {\n      if (router !== null) {\n        linkInstanceRef.current = mountLinkInstance(\n          element,\n          href,\n          router,\n          appPrefetchKind,\n          prefetchEnabled,\n          setOptimisticLinkStatus\n        )\n      }\n\n      return () => {\n        if (linkInstanceRef.current) {\n          unmountLinkForCurrentNavigation(linkInstanceRef.current)\n          linkInstanceRef.current = null\n        }\n        unmountPrefetchableInstance(element)\n      }\n    },\n    [prefetchEnabled, href, router, appPrefetchKind, setOptimisticLinkStatus]\n  )\n\n  const mergedRef = useMergedRef(observeLinkVisibilityOnMount, childRef)\n\n  const childProps: {\n    onTouchStart?: React.TouchEventHandler<HTMLAnchorElement>\n    onMouseEnter: React.MouseEventHandler<HTMLAnchorElement>\n    onClick: React.MouseEventHandler<HTMLAnchorElement>\n    href?: string\n    ref?: any\n  } = {\n    ref: mergedRef,\n    onClick(e) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (!e) {\n          throw new Error(\n            `Component rendered inside next/link has to pass click event to \"onClick\" prop.`\n          )\n        }\n      }\n\n      if (!legacyBehavior && typeof onClick === 'function') {\n        onClick(e)\n      }\n\n      if (\n        legacyBehavior &&\n        child.props &&\n        typeof child.props.onClick === 'function'\n      ) {\n        child.props.onClick(e)\n      }\n\n      if (!router) {\n        return\n      }\n\n      if (e.defaultPrevented) {\n        return\n      }\n\n      linkClicked(e, href, as, linkInstanceRef, replace, scroll, onNavigate)\n    },\n    onMouseEnter(e) {\n      if (!legacyBehavior && typeof onMouseEnterProp === 'function') {\n        onMouseEnterProp(e)\n      }\n\n      if (\n        legacyBehavior &&\n        child.props &&\n        typeof child.props.onMouseEnter === 'function'\n      ) {\n        child.props.onMouseEnter(e)\n      }\n\n      if (!router) {\n        return\n      }\n\n      if (!prefetchEnabled || process.env.NODE_ENV === 'development') {\n        return\n      }\n\n      const upgradeToDynamicPrefetch = unstable_dynamicOnHover === true\n      onNavigationIntent(\n        e.currentTarget as HTMLAnchorElement | SVGAElement,\n        upgradeToDynamicPrefetch\n      )\n    },\n    onTouchStart: process.env.__NEXT_LINK_NO_TOUCH_START\n      ? undefined\n      : function onTouchStart(e) {\n          if (!legacyBehavior && typeof onTouchStartProp === 'function') {\n            onTouchStartProp(e)\n          }\n\n          if (\n            legacyBehavior &&\n            child.props &&\n            typeof child.props.onTouchStart === 'function'\n          ) {\n            child.props.onTouchStart(e)\n          }\n\n          if (!router) {\n            return\n          }\n\n          if (!prefetchEnabled) {\n            return\n          }\n\n          const upgradeToDynamicPrefetch = unstable_dynamicOnHover === true\n          onNavigationIntent(\n            e.currentTarget as HTMLAnchorElement | SVGAElement,\n            upgradeToDynamicPrefetch\n          )\n        },\n  }\n\n  // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n  // defined, we specify the current 'href', so that repetition is not needed by the user.\n  // If the url is absolute, we can bypass the logic to prepend the basePath.\n  if (isAbsoluteUrl(as)) {\n    childProps.href = as\n  } else if (\n    !legacyBehavior ||\n    passHref ||\n    (child.type === 'a' && !('href' in child.props))\n  ) {\n    childProps.href = addBasePath(as)\n  }\n\n  let link: React.ReactNode\n\n  if (legacyBehavior) {\n    if (process.env.NODE_ENV === 'development') {\n      errorOnce(\n        '`legacyBehavior` is deprecated and will be removed in a future ' +\n          'release. A codemod is available to upgrade your components:\\n\\n' +\n          'npx @next/codemod@latest new-link .\\n\\n' +\n          'Learn more: https://nextjs.org/docs/app/building-your-application/upgrading/codemods#remove-a-tags-from-link-components'\n      )\n    }\n    link = React.cloneElement(child, childProps)\n  } else {\n    link = (\n      <a {...restProps} {...childProps}>\n        {children}\n      </a>\n    )\n  }\n\n  return (\n    <LinkStatusContext.Provider value={linkStatus}>\n      {link}\n    </LinkStatusContext.Provider>\n  )\n}\n\nconst LinkStatusContext = createContext<\n  typeof PENDING_LINK_STATUS | typeof IDLE_LINK_STATUS\n>(IDLE_LINK_STATUS)\n\nexport const useLinkStatus = () => {\n  return useContext(LinkStatusContext)\n}\n"],"names":["LinkComponent","useLinkStatus","isModifiedEvent","event","eventTarget","currentTarget","target","getAttribute","metaKey","ctrlKey","shiftKey","altKey","nativeEvent","which","linkClicked","e","href","as","linkInstanceRef","replace","scroll","onNavigate","nodeName","isAnchorNodeName","toUpperCase","hasAttribute","isLocalURL","preventDefault","location","navigate","isDefaultPrevented","dispatchNavigateAction","current","React","startTransition","formatStringOrUrl","urlObjOrString","formatUrl","props","linkStatus","setOptimisticLinkStatus","useOptimistic","IDLE_LINK_STATUS","children","useRef","hrefProp","asProp","childrenProp","prefetch","prefetchProp","passHref","shallow","onClick","onMouseEnter","onMouseEnterProp","onTouchStart","onTouchStartProp","legacyBehavior","ref","forwardedRef","unstable_dynamicOnHover","restProps","a","router","useContext","AppRouterContext","prefetchEnabled","appPrefetchKind","PrefetchKind","AUTO","FULL","process","env","NODE_ENV","createPropError","args","Error","key","expected","actual","window","requiredPropsGuard","requiredProps","Object","keys","forEach","_","optionalPropsGuard","optionalProps","valType","locale","warnOnce","pathname","hasDynamicSegment","split","some","segment","startsWith","endsWith","useMemo","resolvedHref","child","console","warn","Children","only","err","type","childRef","observeLinkVisibilityOnMount","useCallback","element","mountLinkInstance","unmountLinkForCurrentNavigation","unmountPrefetchableInstance","mergedRef","useMergedRef","childProps","defaultPrevented","upgradeToDynamicPrefetch","onNavigationIntent","__NEXT_LINK_NO_TOUCH_START","undefined","isAbsoluteUrl","addBasePath","link","errorOnce","cloneElement","LinkStatusContext","Provider","value","createContext"],"mappings":"","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1382, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Documents/workstation/2025/lemu-project/developer/node_modules/next/dist/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n      }\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n      }\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,uBAA2B,EAAF;;IAczC,OAAO;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1C,IAAIP,QAAQC,GAAG,CAACO,SAAS,eAAE;gBACzBL,OAAOC,OAAO,GAAGC,QAAQ;YAC3B,OAAO;;YAEP;QACF,OAAO;;QAMP;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1420, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Documents/workstation/2025/lemu-project/developer/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind' with { 'turbopack-transition': 'next-server-utility' }\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR' with { 'turbopack-transition': 'next-server-utility' }\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: (id: string | number) => unknown\ndeclare const __next_app_load_chunk__: (id: string | number) => Promise<unknown>\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base' with { 'turbopack-transition': 'next-server-utility' }\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AACA,SAASA,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;IACzE,wBAAwB;AAWnF,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;IAEkD,wBAAwB;AAOhG,iCAAiC;;;;;;;;;;;;IAI/BM,WAAWC,0DAAAA;AACb,EAAC,QAAA;AAED,MAAA,OAAA;IAAc;IAAA,sCAA0C;YAAE,QAAA;YAAA;YAAA,CAA8C,EAAtB,AAAuB;YAAA;gBAEzG,UAAA,CAAA;gBAAA,QAAA;oBAAA,IAAA,0BAA4D;oBAAA;iBAAA;YAC5D;SAAA,KAAO,MAAMC,cAAc,IAAIX,mBAAmB;;KAChDY,YAAY;cACVC,IAAAA,EAAMZ;YAAAA,MAAAA,CAAUa,QAAQ;iBACxBC,MAAM,QAAA;wBAAA;4BACNC,KAAAA,CAAAA,GAAAA,4MAAAA,CAAAA,KAAU,iBAAA,EAAA,MAAA,MAAA,MAAA,MAAA,EAAA,iBAAA,CAAA,CAAA,EAAA,6SAAA,CAAA,UAAA,CAAA,GAAA,CAAA,KAAA,CAAA,KAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA,EAAA;4BACV,OAAA,GAAA,6SAAA,CAAA,UAAA,CAAA,KAAA,CAA2C,CAAA,EAAA,6SAAA,CAAA,UAAA,CAAA,MAAA,EAAA;4BAC3CC,MAAAA,CAAAA,KAAY,OAAA,CAAA;;qBACZC,UAAU;gBACVC,UAAU,EAAE;UACd;QAAA,UAAA;YAAA,IAAA;YAAA;SAAA;UACAC,UAAU,CAAA;YAAA,IAAA;YAAA;SAAA;cACRC,OAAAA;YAAAA,IAAYnB;YAAAA;SAAAA;UACd,cAAA;YAAA,IAAA;YAAA;SAAA;IACF;CAAA,CAAE","ignoreList":[0],"debugId":null}}]
}